services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.prod
    depends_on:
      - db
    expose:
      - "8000"
    volumes:
      - ./backend:/app  
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "my_project.wsgi:application"]

  frontend:
    build:
      context: ./frontend/my-project
      dockerfile: Dockerfile.prod
    env_file:
      - ./frontend/my-project/.env.prod
    depends_on:
      - backend
    expose:
      - "4173"
    command: ["npx", "vite", "preview", "--host"]

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Монтируем конфигурацию nginx
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      # Монтируем сертификаты через volume для «правильного» хранения
      - nginx_certs:/etc/nginx/ssl:ro
      - ./backend/staticfiles:/app/staticfiles:ro
    depends_on:
      - backend
      - frontend    

volumes:
  pgdata:
  nginx_certs:
    driver_opts:
       type: none
       o: bind
       device: ${PWD}/nginx/ssl

